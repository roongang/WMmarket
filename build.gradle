buildscript {
    ext {
        springBootVersion = '2.1.7.RELEASE'
        queryDslVersion = "4.2.2"
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.around'
version '1.0.1-SNAPSHOT'+new Date().format("yyyyMMddHHmmss")
sourceCompatibility = "11"

repositories {
    mavenCentral()
}

dependencies {
    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // lombok
    implementation('org.projectlombok:lombok:1.18.22')
    annotationProcessor('org.projectlombok:lombok:1.18.22')
    testImplementation('org.projectlombok:lombok:1.18.22')
    testAnnotationProcessor('org.projectlombok:lombok:1.18.22')
    // 내장 DB
    implementation('com.h2database:h2')
    // MariaDB
    implementation("org.mariadb.jdbc:mariadb-java-client")
    // session
    implementation('org.springframework.session:spring-session-jdbc')
    // spring security
    implementation('org.springframework.boot:spring-boot-starter-security')
    // file upload
    implementation('commons-fileupload:commons-fileupload:1.4')
    implementation('commons-io:commons-io:2.4')
    implementation('org.apache.tika:tika-core:1.22')
    // AspectJ
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    // Swagger 2
    implementation('io.springfox:springfox-swagger2:2.9.2')
    implementation('io.springfox:springfox-swagger-ui:2.9.2')
    // validation
    implementation("org.springframework.boot:spring-boot-starter-validation")
    // QueryDSL
    implementation("com.querydsl:querydsl-jpa:${queryDslVersion}")
    annotationProcessor("javax.persistence:javax.persistence-api",
            "javax.annotation:javax.annotation-api",
            "com.querydsl:querydsl-apt:${queryDslVersion}:jpa")
    // email
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    // test security (권한을 필요로하는 api 호출을 위한)
    testImplementation('org.springframework.security:spring-security-test')
    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}
// QueryDSL
sourceSets {
    main {
        java {
            srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
        }
    }
}
targetCompatibility = JavaVersion.VERSION_11
